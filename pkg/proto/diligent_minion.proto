syntax = "proto3";

package proto;
option go_package = "./proto";

import "diligent_common.proto";

service Minion {
  // Ping
  rpc Ping (MinionPingRequest) returns (MinionPingResponse);

  // Dataspec Related
  rpc LoadDataSpec (MinionLoadDataSpecRequest) returns (MinionLoadDataSpecResponse);
  rpc GetDataSpecInfo (MinionGetDataSpecInfoRequest) returns (MinionGetDataSpecInfoResponse);

  // DB Connection Related
  rpc OpenDBConnection (MinionOpenDBConnectionRequest) returns (MinionOpenDBConnectionResponse);
  rpc GetDBConnectionInfo (MinionGetDBConnectionInfoRequest) returns (MinionGetDBConnectionInfoResponse);

  // Workload Related
  rpc RunWorkload (MinionRunWorkloadRequest) returns (MinionRunWorkloadResponse);
  rpc GetWorkloadInfo (MinionGetWorkloadInfoRequest) returns (MinionGetWorkloadInfoResponse);
  rpc StopWorkload (MinionStopWorkloadRequest) returns (MinionStopWorkloadResponse);
}

message MinionPingRequest {
}

message MinionPingResponse {
  BuildInfo build_info = 1;
}

message MinionLoadDataSpecRequest {
  string spec_name = 1;
  DataSpec data_spec = 2;
  int32 hash = 3;
}

message MinionLoadDataSpecResponse {
  GeneralStatus status = 1;
}

message MinionGetDataSpecInfoRequest {
}

message MinionGetDataSpecInfoResponse {
  GeneralStatus status = 1;
  DataSpecInfo data_spec_info = 2;
}

message MinionOpenDBConnectionRequest {
  DBSpec db_spec = 1;
}

message MinionOpenDBConnectionResponse {
  GeneralStatus status = 1;
}

message MinionGetDBConnectionInfoRequest {
}

message MinionGetDBConnectionInfoResponse {
  GeneralStatus status = 1;
  DBSpec db_spec = 2;
}

message CloseDBConnectionRequest {
}

message CloseDBConnectionResponse {
  GeneralStatus status = 1;
}

message MinionRunWorkloadRequest {
  WorkloadSpec workload_spec = 1;
}

message MinionRunWorkloadResponse {
  GeneralStatus status = 1;
}

message MinionGetWorkloadInfoRequest {
}

message MinionGetWorkloadInfoResponse {
  GeneralStatus status = 1;
  WorkloadSpec workload_spec = 2;
  bool is_running = 3;
}

message MinionStopWorkloadRequest {
}

message MinionStopWorkloadResponse {
  GeneralStatus status = 1;
}
