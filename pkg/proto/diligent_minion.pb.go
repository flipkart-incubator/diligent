// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: diligent_minion.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MinionPingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MinionPingRequest) Reset() {
	*x = MinionPingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionPingRequest) ProtoMessage() {}

func (x *MinionPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionPingRequest.ProtoReflect.Descriptor instead.
func (*MinionPingRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{0}
}

type MinionPingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MinionPingResponse) Reset() {
	*x = MinionPingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionPingResponse) ProtoMessage() {}

func (x *MinionPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionPingResponse.ProtoReflect.Descriptor instead.
func (*MinionPingResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{1}
}

type MinionLoadDataSpecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecName string    `protobuf:"bytes,1,opt,name=spec_name,json=specName,proto3" json:"spec_name,omitempty"`
	DataSpec *DataSpec `protobuf:"bytes,2,opt,name=data_spec,json=dataSpec,proto3" json:"data_spec,omitempty"`
	Hash     int32     `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *MinionLoadDataSpecRequest) Reset() {
	*x = MinionLoadDataSpecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionLoadDataSpecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionLoadDataSpecRequest) ProtoMessage() {}

func (x *MinionLoadDataSpecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionLoadDataSpecRequest.ProtoReflect.Descriptor instead.
func (*MinionLoadDataSpecRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{2}
}

func (x *MinionLoadDataSpecRequest) GetSpecName() string {
	if x != nil {
		return x.SpecName
	}
	return ""
}

func (x *MinionLoadDataSpecRequest) GetDataSpec() *DataSpec {
	if x != nil {
		return x.DataSpec
	}
	return nil
}

func (x *MinionLoadDataSpecRequest) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

type MinionLoadDataSpecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MinionLoadDataSpecResponse) Reset() {
	*x = MinionLoadDataSpecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionLoadDataSpecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionLoadDataSpecResponse) ProtoMessage() {}

func (x *MinionLoadDataSpecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionLoadDataSpecResponse.ProtoReflect.Descriptor instead.
func (*MinionLoadDataSpecResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{3}
}

func (x *MinionLoadDataSpecResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type MinionGetDataSpecInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MinionGetDataSpecInfoRequest) Reset() {
	*x = MinionGetDataSpecInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionGetDataSpecInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionGetDataSpecInfoRequest) ProtoMessage() {}

func (x *MinionGetDataSpecInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionGetDataSpecInfoRequest.ProtoReflect.Descriptor instead.
func (*MinionGetDataSpecInfoRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{4}
}

type MinionGetDataSpecInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DataSpecInfo *DataSpecInfo  `protobuf:"bytes,2,opt,name=data_spec_info,json=dataSpecInfo,proto3" json:"data_spec_info,omitempty"`
}

func (x *MinionGetDataSpecInfoResponse) Reset() {
	*x = MinionGetDataSpecInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionGetDataSpecInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionGetDataSpecInfoResponse) ProtoMessage() {}

func (x *MinionGetDataSpecInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionGetDataSpecInfoResponse.ProtoReflect.Descriptor instead.
func (*MinionGetDataSpecInfoResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{5}
}

func (x *MinionGetDataSpecInfoResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *MinionGetDataSpecInfoResponse) GetDataSpecInfo() *DataSpecInfo {
	if x != nil {
		return x.DataSpecInfo
	}
	return nil
}

type MinionOpenDBConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbSpec *DBSpec `protobuf:"bytes,1,opt,name=db_spec,json=dbSpec,proto3" json:"db_spec,omitempty"`
}

func (x *MinionOpenDBConnectionRequest) Reset() {
	*x = MinionOpenDBConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionOpenDBConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionOpenDBConnectionRequest) ProtoMessage() {}

func (x *MinionOpenDBConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionOpenDBConnectionRequest.ProtoReflect.Descriptor instead.
func (*MinionOpenDBConnectionRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{6}
}

func (x *MinionOpenDBConnectionRequest) GetDbSpec() *DBSpec {
	if x != nil {
		return x.DbSpec
	}
	return nil
}

type MinionOpenDBConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MinionOpenDBConnectionResponse) Reset() {
	*x = MinionOpenDBConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionOpenDBConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionOpenDBConnectionResponse) ProtoMessage() {}

func (x *MinionOpenDBConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionOpenDBConnectionResponse.ProtoReflect.Descriptor instead.
func (*MinionOpenDBConnectionResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{7}
}

func (x *MinionOpenDBConnectionResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type MinionGetDBConnectionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MinionGetDBConnectionInfoRequest) Reset() {
	*x = MinionGetDBConnectionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionGetDBConnectionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionGetDBConnectionInfoRequest) ProtoMessage() {}

func (x *MinionGetDBConnectionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionGetDBConnectionInfoRequest.ProtoReflect.Descriptor instead.
func (*MinionGetDBConnectionInfoRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{8}
}

type MinionGetDBConnectionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DbSpec *DBSpec        `protobuf:"bytes,2,opt,name=db_spec,json=dbSpec,proto3" json:"db_spec,omitempty"`
}

func (x *MinionGetDBConnectionInfoResponse) Reset() {
	*x = MinionGetDBConnectionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionGetDBConnectionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionGetDBConnectionInfoResponse) ProtoMessage() {}

func (x *MinionGetDBConnectionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionGetDBConnectionInfoResponse.ProtoReflect.Descriptor instead.
func (*MinionGetDBConnectionInfoResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{9}
}

func (x *MinionGetDBConnectionInfoResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *MinionGetDBConnectionInfoResponse) GetDbSpec() *DBSpec {
	if x != nil {
		return x.DbSpec
	}
	return nil
}

type CloseDBConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseDBConnectionRequest) Reset() {
	*x = CloseDBConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDBConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDBConnectionRequest) ProtoMessage() {}

func (x *CloseDBConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDBConnectionRequest.ProtoReflect.Descriptor instead.
func (*CloseDBConnectionRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{10}
}

type CloseDBConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CloseDBConnectionResponse) Reset() {
	*x = CloseDBConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseDBConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseDBConnectionResponse) ProtoMessage() {}

func (x *CloseDBConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseDBConnectionResponse.ProtoReflect.Descriptor instead.
func (*CloseDBConnectionResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{11}
}

func (x *CloseDBConnectionResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type MinionRunWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadSpec *WorkloadSpec `protobuf:"bytes,1,opt,name=workload_spec,json=workloadSpec,proto3" json:"workload_spec,omitempty"`
}

func (x *MinionRunWorkloadRequest) Reset() {
	*x = MinionRunWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionRunWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionRunWorkloadRequest) ProtoMessage() {}

func (x *MinionRunWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionRunWorkloadRequest.ProtoReflect.Descriptor instead.
func (*MinionRunWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{12}
}

func (x *MinionRunWorkloadRequest) GetWorkloadSpec() *WorkloadSpec {
	if x != nil {
		return x.WorkloadSpec
	}
	return nil
}

type MinionRunWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MinionRunWorkloadResponse) Reset() {
	*x = MinionRunWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionRunWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionRunWorkloadResponse) ProtoMessage() {}

func (x *MinionRunWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionRunWorkloadResponse.ProtoReflect.Descriptor instead.
func (*MinionRunWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{13}
}

func (x *MinionRunWorkloadResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type MinionGetWorkloadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MinionGetWorkloadInfoRequest) Reset() {
	*x = MinionGetWorkloadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionGetWorkloadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionGetWorkloadInfoRequest) ProtoMessage() {}

func (x *MinionGetWorkloadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionGetWorkloadInfoRequest.ProtoReflect.Descriptor instead.
func (*MinionGetWorkloadInfoRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{14}
}

type MinionGetWorkloadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	WorkloadSpec *WorkloadSpec  `protobuf:"bytes,2,opt,name=workload_spec,json=workloadSpec,proto3" json:"workload_spec,omitempty"`
	IsRunning    bool           `protobuf:"varint,3,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
}

func (x *MinionGetWorkloadInfoResponse) Reset() {
	*x = MinionGetWorkloadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionGetWorkloadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionGetWorkloadInfoResponse) ProtoMessage() {}

func (x *MinionGetWorkloadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionGetWorkloadInfoResponse.ProtoReflect.Descriptor instead.
func (*MinionGetWorkloadInfoResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{15}
}

func (x *MinionGetWorkloadInfoResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *MinionGetWorkloadInfoResponse) GetWorkloadSpec() *WorkloadSpec {
	if x != nil {
		return x.WorkloadSpec
	}
	return nil
}

func (x *MinionGetWorkloadInfoResponse) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

type MinionStopWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MinionStopWorkloadRequest) Reset() {
	*x = MinionStopWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionStopWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionStopWorkloadRequest) ProtoMessage() {}

func (x *MinionStopWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionStopWorkloadRequest.ProtoReflect.Descriptor instead.
func (*MinionStopWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{16}
}

type MinionStopWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GeneralStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MinionStopWorkloadResponse) Reset() {
	*x = MinionStopWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diligent_minion_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinionStopWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinionStopWorkloadResponse) ProtoMessage() {}

func (x *MinionStopWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diligent_minion_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinionStopWorkloadResponse.ProtoReflect.Descriptor instead.
func (*MinionStopWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_diligent_minion_proto_rawDescGZIP(), []int{17}
}

func (x *MinionStopWorkloadResponse) GetStatus() *GeneralStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_diligent_minion_proto protoreflect.FileDescriptor

var file_diligent_minion_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x69, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x64, 0x69, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4d, 0x69,
	0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x7a, 0x0a, 0x19, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x4a, 0x0a, 0x1a,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x1d, 0x4d, 0x69, 0x6e,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x47, 0x0a, 0x1d, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65,
	0x6e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x42,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x06, 0x64, 0x62, 0x53, 0x70, 0x65, 0x63, 0x22, 0x4e, 0x0a, 0x1e,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a, 0x20,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x79, 0x0a, 0x21, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x42, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x06, 0x64, 0x62, 0x53, 0x70, 0x65, 0x63, 0x22, 0x1a, 0x0a, 0x18, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x54, 0x0a, 0x18, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x22, 0x49, 0x0a, 0x19, 0x4d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x1d, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x1b, 0x0a, 0x19,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x1a, 0x4d, 0x69, 0x6e,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xc8, 0x05, 0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f,
	0x6e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x0c, 0x4c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x70, 0x65, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x42, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e,
	0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x52,
	0x75, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6e, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x53,
	0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x70,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_diligent_minion_proto_rawDescOnce sync.Once
	file_diligent_minion_proto_rawDescData = file_diligent_minion_proto_rawDesc
)

func file_diligent_minion_proto_rawDescGZIP() []byte {
	file_diligent_minion_proto_rawDescOnce.Do(func() {
		file_diligent_minion_proto_rawDescData = protoimpl.X.CompressGZIP(file_diligent_minion_proto_rawDescData)
	})
	return file_diligent_minion_proto_rawDescData
}

var file_diligent_minion_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_diligent_minion_proto_goTypes = []interface{}{
	(*MinionPingRequest)(nil),                 // 0: proto.MinionPingRequest
	(*MinionPingResponse)(nil),                // 1: proto.MinionPingResponse
	(*MinionLoadDataSpecRequest)(nil),         // 2: proto.MinionLoadDataSpecRequest
	(*MinionLoadDataSpecResponse)(nil),        // 3: proto.MinionLoadDataSpecResponse
	(*MinionGetDataSpecInfoRequest)(nil),      // 4: proto.MinionGetDataSpecInfoRequest
	(*MinionGetDataSpecInfoResponse)(nil),     // 5: proto.MinionGetDataSpecInfoResponse
	(*MinionOpenDBConnectionRequest)(nil),     // 6: proto.MinionOpenDBConnectionRequest
	(*MinionOpenDBConnectionResponse)(nil),    // 7: proto.MinionOpenDBConnectionResponse
	(*MinionGetDBConnectionInfoRequest)(nil),  // 8: proto.MinionGetDBConnectionInfoRequest
	(*MinionGetDBConnectionInfoResponse)(nil), // 9: proto.MinionGetDBConnectionInfoResponse
	(*CloseDBConnectionRequest)(nil),          // 10: proto.CloseDBConnectionRequest
	(*CloseDBConnectionResponse)(nil),         // 11: proto.CloseDBConnectionResponse
	(*MinionRunWorkloadRequest)(nil),          // 12: proto.MinionRunWorkloadRequest
	(*MinionRunWorkloadResponse)(nil),         // 13: proto.MinionRunWorkloadResponse
	(*MinionGetWorkloadInfoRequest)(nil),      // 14: proto.MinionGetWorkloadInfoRequest
	(*MinionGetWorkloadInfoResponse)(nil),     // 15: proto.MinionGetWorkloadInfoResponse
	(*MinionStopWorkloadRequest)(nil),         // 16: proto.MinionStopWorkloadRequest
	(*MinionStopWorkloadResponse)(nil),        // 17: proto.MinionStopWorkloadResponse
	(*DataSpec)(nil),                          // 18: proto.DataSpec
	(*GeneralStatus)(nil),                     // 19: proto.GeneralStatus
	(*DataSpecInfo)(nil),                      // 20: proto.DataSpecInfo
	(*DBSpec)(nil),                            // 21: proto.DBSpec
	(*WorkloadSpec)(nil),                      // 22: proto.WorkloadSpec
}
var file_diligent_minion_proto_depIdxs = []int32{
	18, // 0: proto.MinionLoadDataSpecRequest.data_spec:type_name -> proto.DataSpec
	19, // 1: proto.MinionLoadDataSpecResponse.status:type_name -> proto.GeneralStatus
	19, // 2: proto.MinionGetDataSpecInfoResponse.status:type_name -> proto.GeneralStatus
	20, // 3: proto.MinionGetDataSpecInfoResponse.data_spec_info:type_name -> proto.DataSpecInfo
	21, // 4: proto.MinionOpenDBConnectionRequest.db_spec:type_name -> proto.DBSpec
	19, // 5: proto.MinionOpenDBConnectionResponse.status:type_name -> proto.GeneralStatus
	19, // 6: proto.MinionGetDBConnectionInfoResponse.status:type_name -> proto.GeneralStatus
	21, // 7: proto.MinionGetDBConnectionInfoResponse.db_spec:type_name -> proto.DBSpec
	19, // 8: proto.CloseDBConnectionResponse.status:type_name -> proto.GeneralStatus
	22, // 9: proto.MinionRunWorkloadRequest.workload_spec:type_name -> proto.WorkloadSpec
	19, // 10: proto.MinionRunWorkloadResponse.status:type_name -> proto.GeneralStatus
	19, // 11: proto.MinionGetWorkloadInfoResponse.status:type_name -> proto.GeneralStatus
	22, // 12: proto.MinionGetWorkloadInfoResponse.workload_spec:type_name -> proto.WorkloadSpec
	19, // 13: proto.MinionStopWorkloadResponse.status:type_name -> proto.GeneralStatus
	0,  // 14: proto.Minion.Ping:input_type -> proto.MinionPingRequest
	2,  // 15: proto.Minion.LoadDataSpec:input_type -> proto.MinionLoadDataSpecRequest
	4,  // 16: proto.Minion.GetDataSpecInfo:input_type -> proto.MinionGetDataSpecInfoRequest
	6,  // 17: proto.Minion.OpenDBConnection:input_type -> proto.MinionOpenDBConnectionRequest
	8,  // 18: proto.Minion.GetDBConnectionInfo:input_type -> proto.MinionGetDBConnectionInfoRequest
	12, // 19: proto.Minion.RunWorkload:input_type -> proto.MinionRunWorkloadRequest
	14, // 20: proto.Minion.GetWorkloadInfo:input_type -> proto.MinionGetWorkloadInfoRequest
	16, // 21: proto.Minion.StopWorkload:input_type -> proto.MinionStopWorkloadRequest
	1,  // 22: proto.Minion.Ping:output_type -> proto.MinionPingResponse
	3,  // 23: proto.Minion.LoadDataSpec:output_type -> proto.MinionLoadDataSpecResponse
	5,  // 24: proto.Minion.GetDataSpecInfo:output_type -> proto.MinionGetDataSpecInfoResponse
	7,  // 25: proto.Minion.OpenDBConnection:output_type -> proto.MinionOpenDBConnectionResponse
	9,  // 26: proto.Minion.GetDBConnectionInfo:output_type -> proto.MinionGetDBConnectionInfoResponse
	13, // 27: proto.Minion.RunWorkload:output_type -> proto.MinionRunWorkloadResponse
	15, // 28: proto.Minion.GetWorkloadInfo:output_type -> proto.MinionGetWorkloadInfoResponse
	17, // 29: proto.Minion.StopWorkload:output_type -> proto.MinionStopWorkloadResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_diligent_minion_proto_init() }
func file_diligent_minion_proto_init() {
	if File_diligent_minion_proto != nil {
		return
	}
	file_diligent_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_diligent_minion_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionPingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionPingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionLoadDataSpecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionLoadDataSpecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionGetDataSpecInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionGetDataSpecInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionOpenDBConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionOpenDBConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionGetDBConnectionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionGetDBConnectionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDBConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseDBConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionRunWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionRunWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionGetWorkloadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionGetWorkloadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionStopWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diligent_minion_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinionStopWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_diligent_minion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_diligent_minion_proto_goTypes,
		DependencyIndexes: file_diligent_minion_proto_depIdxs,
		MessageInfos:      file_diligent_minion_proto_msgTypes,
	}.Build()
	File_diligent_minion_proto = out.File
	file_diligent_minion_proto_rawDesc = nil
	file_diligent_minion_proto_goTypes = nil
	file_diligent_minion_proto_depIdxs = nil
}
