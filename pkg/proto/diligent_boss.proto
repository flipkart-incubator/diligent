syntax = "proto3";

package proto;
option go_package = "./proto";

import "diligent_common.proto";

service Boss {
  // Ping
  rpc Ping (BossPingRequest) returns (BossPingResponse);

  // Minions Management
  rpc RegisterMinion (BossRegisterMinionRequest) returns (BossRegisterMinionResponse);
  rpc UnregisterMinion (BossUnregisterMinionRequest) returns (BossUnregisterMinionResponse);
  rpc GetMinionInfo (BossGetMinionInfoRequest) returns (BossGetMinionInfoResponse);

  // Job Control
  rpc PrepareJob (BossPrepareJobRequest) returns (BossPrepareJobResponse);
  rpc RunJob (BossRunJobRequest) returns (BossRunJobResponse);
  rpc AbortJob (BossAbortJobRequest) returns (BossAbortJobResponse);
  rpc GetJobInfo (BossGetJobInfoRequest) returns (BossGetJobInfoResponse);

  // Experiment Management
  rpc StartExperiment (BossStartExperimentRequest) returns (BossStartExperimentResponse);
  rpc StopExperiment (BossStopExperimentRequest) returns (BossStopExperimentResponse);
  rpc GetExperimentInfo (BossGetExperimentInfoRequest) returns (BossGetExperimentInfoResponse);
}

message BossPingRequest {
}

message BossPingResponse {
  BuildInfo build_info = 1;
  ProcessInfo process_info = 2;
}

message BossRegisterMinionRequest{
  string addr = 1;
}

message BossRegisterMinionResponse {
  GeneralStatus status = 1;
}

message BossUnregisterMinionRequest {
  string addr = 1;
}

message BossUnregisterMinionResponse {
  GeneralStatus status = 1;
}

message MinionInfo {
  string addr = 1;
  GeneralStatus reachability = 2;
  BuildInfo build_info = 3;
  ProcessInfo process_info = 4;
  MinionJobInfo job_info = 5;
}

message MinionStatus {
  string addr = 1;
  GeneralStatus status = 2;
}

message BossGetMinionInfoRequest {
}

message BossGetMinionInfoResponse {
  repeated MinionInfo minion_infos = 1;
}

message BossPrepareJobRequest {
  JobSpec job_spec = 1;
}

message BossPrepareJobResponse {
  GeneralStatus status = 1;
  repeated MinionStatus minion_statuses = 2;
}

message BossRunJobRequest {
}

message BossRunJobResponse {
  GeneralStatus status = 1;
  repeated MinionStatus minion_statuses = 2;
}

message BossAbortJobRequest {
}

message BossAbortJobResponse {
    GeneralStatus status = 1;
    repeated MinionStatus minion_statuses = 2;
}

message BossJobInfo {
  JobSpec job_spec = 1;
  JobState job_state = 2;
  int64 prepare_time = 3;
  int64 run_time = 4;
  int64 end_time = 5;
  repeated string minion_addrs = 6;
}

message BossGetJobInfoRequest {
}

message BossGetJobInfoResponse {
  GeneralStatus status = 1;
  BossJobInfo job_info = 2;
}

enum ExperimentState {
  UNDEFINED_EXPERIMENT_STATE = 0;
  NEW_EXPERIMENT = 1;
  STARTED = 2;
  STOPPED = 3;
}

message ExperimentInfo {
  string name = 1;
  ExperimentState state = 2;
  int64 start_time = 3;
  int64 stop_time = 4;
}

message BossStartExperimentRequest {
  string experiment_name = 1;
}

message BossStartExperimentResponse {
  GeneralStatus status = 1;
}

message BossStopExperimentRequest {
}

message BossStopExperimentResponse {
  GeneralStatus status = 1;
}

message BossGetExperimentInfoRequest {
}

message BossGetExperimentInfoResponse {
  GeneralStatus status = 1;
  ExperimentInfo experiment_info = 2;
}
